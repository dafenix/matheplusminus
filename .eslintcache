[{"/Users/dweber/Documents/Privat/haudenpanda/src/index.js":"1","/Users/dweber/Documents/Privat/haudenpanda/src/App.js":"2","/Users/dweber/Documents/Privat/haudenpanda/src/Canvas.js":"3","/Users/dweber/Documents/Privat/haudenpanda/src/ShowWindowDimensions.js":"4","/Users/dweber/Documents/Privat/haudenpanda/src/Numpad.js":"5","/Users/dweber/Documents/Privat/haudenpanda/src/Splash.js":"6","/Users/dweber/Documents/Privat/haudenpanda/src/MultiPlayer.js":"7","/Users/dweber/Documents/Privat/haudenpanda/src/SolvedMessageBox.js":"8","/Users/dweber/Documents/Privat/haudenpanda/src/Status.js":"9","/Users/dweber/Documents/Privat/haudenpanda/src/Reward.js":"10","/Users/dweber/Documents/Privat/haudenpanda/src/Options.js":"11","/Users/dweber/Documents/Privat/haudenpanda/src/useLocalStorage.js":"12","/Users/dweber/Documents/Privat/haudenpanda/src/AnimalFamily.js":"13","/Users/dweber/Documents/Privat/haudenpanda/src/Attribution.js":"14"},{"size":376,"mtime":1612474401058,"results":"15","hashOfConfig":"16"},{"size":11618,"mtime":1612473209970,"results":"17","hashOfConfig":"16"},{"size":1485,"mtime":1612209487428,"results":"18","hashOfConfig":"16"},{"size":621,"mtime":1611942201519,"results":"19","hashOfConfig":"16"},{"size":676,"mtime":1611947510015,"results":"20","hashOfConfig":"16"},{"size":927,"mtime":1612474401064,"results":"21","hashOfConfig":"16"},{"size":2308,"mtime":1611949835192,"results":"22","hashOfConfig":"16"},{"size":1289,"mtime":1612019472878,"results":"23","hashOfConfig":"16"},{"size":1062,"mtime":1612037717183,"results":"24","hashOfConfig":"16"},{"size":3598,"mtime":1612474516341,"results":"25","hashOfConfig":"16"},{"size":1470,"mtime":1612215140936,"results":"26","hashOfConfig":"16"},{"size":1372,"mtime":1612124713331,"results":"27","hashOfConfig":"16"},{"size":150245,"mtime":1612382570273,"results":"28","hashOfConfig":"16"},{"size":1144,"mtime":1612474169693,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1bfzbr9",{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"32"},"/Users/dweber/Documents/Privat/haudenpanda/src/index.js",[],["68","69"],"/Users/dweber/Documents/Privat/haudenpanda/src/App.js",["70","71","72","73","74","75","76","77"],"import Canvas from \"./Canvas\";\nimport React, {useContext, useEffect, useRef, useState} from 'react';\nimport './App.css';\n\nimport Numpad from \"./Numpad\";\nimport Button from \"react-bootstrap/Button\";\nimport {Nav, Navbar, NavDropdown} from \"react-bootstrap\";\nimport Splash from \"./Splash\";\nimport SolvedModal from \"./SolvedMessageBox\";\nimport Status from \"./Status\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    withRouter, useHistory\n} from \"react-router-dom\";\nimport Reward from \"./Reward\";\nimport Options, {options} from \"./Options\";\nimport {useLocalStorage} from \"./useLocalStorage\";\nimport {useMultiAudio} from \"./MultiPlayer\";\nimport Attribution from \"./Attribution\";\n//import {sounds} from \"./Sounds\";\n\nfunction App() {\n    const history = useHistory();\n    //const [, toggle] = useMultiAudio(sounds);\n\n\n    const options = [\n        {min: 1, max: 10, description: 'Zahlen von 1 bis 10', isDefault: true},\n        {min: 1, max: 20, description: 'Zahlen von 1 bis 20', isDefault: false},\n        {min: 1, max: 50, description: 'Zahlen von 1 bis 50', isDefault: false},\n        {min: 1, max: 100, description: 'Zahlen von 1 bis 100', isDefault: false},\n    ];\n\n    const [result, setResult] = useState('');\n    const validAnswerAudio = useRef(null);\n    const wrongAnswerAudio = useRef(null);\n    const roundCompletedAudio = useRef(null);\n    const [excercise, setExcercise] = useState('');\n    const [excercises, setExcercises] = useState([]);\n    const [solvedValid, setSolvedValid] = useState(false);\n    const [splashVisible, setSplash] = useState(true);\n    const [show, setShow] = useState(false);\n    const [index, setIndex] = useState(0);\n    const handleClose = () => setShow(false);\n    const [mode,] = useLocalStorage('mode', options[0]);\n    const [rewards,setRewards] = useLocalStorage('rewards', {\n        gangster: false,\n        smile: false,\n        giraffe: false,\n        sheep: false,\n        hippo: false,\n        tiger: false,\n        elephant: false,\n        goat: false,\n        background: true,\n        roundCompleted: null\n    });\n\n    useEffect(() => {\n        // We only want to load the sound when root domain was called\n        if (history.location.pathname === \"/\") {\n            fetch('./Sounds.json').then(function (response){\n                return response.json();\n            }).then(function (data){\n                validAnswerAudio.current.src = data.correctAnswer;\n                wrongAnswerAudio.current.src = data.incorrectAnswer;\n                roundCompletedAudio.current.src = data.roundCompleted;\n            });\n        }\n\n        if (!splashVisible) {\n            const excercises = buildExcercises();\n            setExcercises(excercises);\n            setExcercise(excercises[0]);\n        }\n    }, [splashVisible, mode]);\n    /**\n     * Returns a random integer between min (inclusive) and max (inclusive).\n     * The value is no lower than min (or the next integer greater than min\n     * if min isn't an integer) and no greater than max (or the next integer\n     * lower than max if max isn't an integer).\n     * Using Math.round() will give you a non-uniform distribution!\n     */\n    const getRandomInt = (min, max) => {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    const buildPlus = (max, maxCalcs, random) => {\n        let left = 0;\n        let right = 0;\n        let calcs = 0;\n\n        do {\n            left = getRandomInt(1, max);\n            right = getRandomInt(1, max);\n            calcs++;\n        } while (left + right > max || calcs >= maxCalcs);\n\n        return {\n            left: left,\n            right: right,\n            id: left + '+' + right,\n            type: '+',\n            solved: undefined,\n            hide: random % 3 === 0 ? 0 : random % 2 === 0 ? 1 : 2,\n            render: function (result) {\n                const l = this.hide === 0 ? result.padEnd(('00').length, '_') : left;\n                const r = this.hide === 1 ? result.padEnd(('00').length, '_') : right;\n                const res = this.hide === 2 ? result.padEnd(('00').length, '_') : this.calc() + '';\n                return l + ' ' + this.type + ' ' + r + ' = ' + res;\n            },\n            calc: function () {\n                return left + right;\n            },\n            pseudoCalc: function (result) {\n                const resultAsInt = parseInt(result);\n                const l = this.hide === 0 ? resultAsInt : parseInt(left);\n                const r = this.hide === 1 ? resultAsInt : parseInt(right);\n                const res = this.hide === 2 ? resultAsInt : parseInt(l) + parseInt(r);\n                console.log('pseudoCalc', {l, r, res});\n                return l === left && r === right && this.calc() === res;\n            }\n        }\n    }\n\n    const buildMinus = (max, maxCalcs, random) => {\n        let left = 0;\n        let right = 0;\n        let calcs = 0;\n\n        do {\n            left = getRandomInt(1, max);\n            right = getRandomInt(1, left);\n            calcs++;\n        } while (left - right === 0 || calcs >= maxCalcs);\n\n        return {\n            left: left,\n            right: right,\n            id: left + '-' + right,\n            type: '-',\n            solved: undefined,\n            hide: random % 3 === 0 ? 0 : random % 2 === 0 ? 1 : 2,\n            render: function (result) {\n                const l = this.hide === 0 ? result.padEnd(('00').length, '_') : left;\n                const r = this.hide === 1 ? result.padEnd(('00').length, '_') : right;\n                const res = this.hide === 2 ? result.padEnd(('00').length, '_') : this.calc() + '';\n                return l + ' ' + this.type + ' ' + r + ' = ' + res;\n            },\n            calc: function () {\n                return left - right;\n            },\n            pseudoCalc: function (result) {\n                const resultAsInt = parseInt(result);\n                const l = this.hide === 0 ? resultAsInt : parseInt(left);\n                const r = this.hide === 1 ? resultAsInt : parseInt(right);\n                const res = this.hide === 2 ? resultAsInt : parseInt(l) - parseInt(r);\n                console.log('pseudoCalc', {l, r, res});\n                return l === left && r === right && this.calc() === res;\n            }\n        }\n    }\n\n    const buildExcercise = () => {\n        const max = mode.max;\n        const maxCalcs = 20;\n        const type = getRandomInt(0, max);\n        return type % 2 === 0 ? buildPlus(max, maxCalcs, type) : buildMinus(max, maxCalcs, type);\n    }\n\n    const buildExcercises = () => {\n        const max = 1;\n        let excercises = [];\n        let ids = [];\n        for (let i = 0; i < max; i++) {\n            let current;\n            do {\n                current = buildExcercise();\n            } while (ids.includes(current.id))\n            excercises.push(current);\n            ids.push(current.id);\n        }\n        return excercises;\n    }\n\n    const [onlyUnsolved, setOnlyUnsolved] = useState(false);\n    const solve = () => {\n\n        if (excercise.pseudoCalc(result)) {\n            setSolvedValid(true);\n            excercise.solved = true;\n            validAnswerAudio.current.play();\n            //toggle(0)();\n            //setShow(true);\n        } else {\n            setSolvedValid(false);\n            excercise.solved = false;\n            wrongAnswerAudio.current.play();\n            //toggle(1)();\n            setShow(true);\n        }\n\n        if (excercises.indexOf(excercise) === excercises.length - 1) {\n            setOnlyUnsolved(true);\n            console.log('index', index);\n            var unsolved = excercises.filter(e => e.solved === false);\n            if (unsolved.length > 0) {\n                const nextUnsolved = unsolved[0];\n                let newIndex = excercises.indexOf(nextUnsolved);\n                setIndex(newIndex);\n                setExcercise(nextUnsolved);\n                setResult('');\n                return;\n            }\n        }\n\n        if (excercises.filter(e => e.solved === true).length === excercises.length) {\n            console.log('fertig',rewards);\n            roundCompletedAudio.current.play();\n            setRewards({...rewards, roundCompleted: true});\n            //toggle(2)();\n            setTimeout(function () {\n                history.push(\"/reward\", {roundCompleted: true, rewards: rewards});\n            }, 3000);\n\n\n        }\n\n        setResult('');\n        let newIndex = index + 1;\n        if (onlyUnsolved) {\n            var unsolved = excercises.filter(e => e.solved === false);\n            if (unsolved.length === 0) {\n                return;\n            }\n            newIndex = excercises.indexOf(unsolved[0]);\n        }\n        if (newIndex > excercises.length - 1) {\n            return;\n        }\n        setIndex(newIndex);\n        setExcercise(excercises[newIndex]);\n\n\n    }\n\n\n    return (\n        <div className=\"App\">\n                <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" collapseOnSelect>\n                    <Navbar.Brand as={Link} to=\"/\" href=\"#home\">Addiere und Subtrahiere</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/\" onSelect={() => {\n                            setResult('');\n                            setSplash(true);\n                        }}>Home</Nav.Link>\n                        <Nav.Link href=\"#options\" as={Link} to=\"/options\">Einstellungen</Nav.Link>\n                        <Nav.Link href=\"#reward\" as={Link} to=\"/reward\">Belohnung</Nav.Link>\n                        <Nav.Link href=\"#attribution\" as={Link} to=\"/attribution\">Attribution</Nav.Link>\n                    </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n\n\n            <Switch>\n                <Route path=\"/reward\">\n                    <Reward rewards={rewards}/>\n\n                </Route>\n                <Route path=\"/options\">\n                    <Options options={options}/>\n                </Route>\n                <Route path=\"/attribution\">\n                    <Attribution />\n                </Route>\n\n                <Route path=\"/\">\n                    <audio ref={validAnswerAudio} src=\"\" preload=\"auto\"></audio>\n                    <audio ref={wrongAnswerAudio} src=\"\" preload=\"auto\"></audio>\n                    <audio ref={roundCompletedAudio} src=\"\" preload=\"auto\"></audio>\n                    <Status excercises={excercises}/>\n                    <Splash visible={splashVisible} setVisible={setSplash}/>\n\n                    {!splashVisible && <div>\n                        <Canvas className=\"Canvas\" excercise={excercise} result={result}\n                                placeholder={'00 + 00 = '}/>\n                        <div className=\"solveButtonGroup\">\n                            <Button variant=\"danger\"\n                                    className=\"Item\"\n                                    onClick={() => setResult('')}>Entfernen</Button>\n                            <Button variant=\"success\"\n                                    className=\"Item\"\n                                    onClick={() => solve()}>Lösen</Button>\n                        </div>\n                        <Numpad result={result} setResult={setResult}/>\n\n\n                    </div>}\n                    <SolvedModal ok={solvedValid} show={show} handleClose={() => setShow(false)}/>\n                </Route>\n            </Switch>\n        </div>\n    );\n\n\n}\n\n\nexport default withRouter(App);\n","/Users/dweber/Documents/Privat/haudenpanda/src/Canvas.js",["78","79","80","81"],"import React, {useRef, useEffect, useState, useLayoutEffect} from 'react'\nimport {useWindowSize} from \"./ShowWindowDimensions\";\n\nconst Canvas = props => {\n\n    const canvasRef = useRef(null)\n    const [width, height] = useWindowSize();\n    const draw = (ctx, frameCount) => {\n        ctx.canvas.width = width;\n        ctx.canvas.height = height / 100 * 40;\n        ctx.clearRect(10, 50, ctx.canvas.width, ctx.canvas.height)\n        ctx.fillStyle = '#000000'\n        let fontSize = 300;\n        if (!props.excercise) return;\n        do {\n            fontSize--;\n            ctx.font = fontSize + \"px \" + \"Arial\";\n        } while (ctx.measureText(props.placeholder + '00').width > ctx.canvas.width)\n        const lineHeight = ctx.measureText('M').width;\n        ctx.fillText(props.excercise.render(props.result), 0, lineHeight + 20);\n\n        //Placeholder for length of result to keep enough space\n    }\n\n    useEffect(() => {\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n        let frameCount = 0\n        let animationFrameId\n\n        //Our draw came here\n        const render = () => {\n            frameCount++\n            draw(context, frameCount)\n            animationFrameId = window.requestAnimationFrame(render)\n        }\n        render()\n\n        return () => {\n            window.cancelAnimationFrame(animationFrameId)\n        }\n    }, [draw, width, height])\n\n    return <canvas ref={canvasRef} {...props}/>\n}\n\nexport default Canvas","/Users/dweber/Documents/Privat/haudenpanda/src/ShowWindowDimensions.js",[],"/Users/dweber/Documents/Privat/haudenpanda/src/Numpad.js",["82","83"],"import {useLayoutEffect, useState} from \"react/cjs/react.production.min\";\nimport Button from 'react-bootstrap/Button';\nfunction Numpad(props) {\n\n    const setNumber = (e) => {\n        props.setResult(props.result + e.target.textContent);\n    }\n    const elements = [1, 2, 3, 4, 5, 6, 7, 8, 9,0];\n    return (\n        <div className=\"Numpad\">\n            {elements.map((value, index) => {\n                return <Button variant=\"primary\"\n                               key={index}\n                               className=\"Item\"\n                               onClick={(e) => setNumber(e,1)}>{''+value}</Button>\n            })}\n        </div>\n    );\n}\n\n\nexport default Numpad;\n","/Users/dweber/Documents/Privat/haudenpanda/src/Splash.js",["84","85","86","87"],"import React, {useEffect, useState} from 'react';\nimport lemming from './lemmling_Cartoon_dog.svg'\nimport Button from \"react-bootstrap/Button\";\nimport {useMultiAudio} from \"./MultiPlayer\";\n//import {sounds} from \"./Sounds\";\nimport {useLocalStorage} from \"./useLocalStorage\";\nfunction Splash(props) {\n    //const [, toggle] = useMultiAudio([sounds[0]]);\n    const [,setSounds] = useLocalStorage('sounds',null);\n\n    useEffect(() => {\n       \n    }, []);\n\n    return (props.visible &&\n        <div className=\"splash\">\n           <img src={lemming} className=\"splashImage rotating\"/>\n           <h1>Willkommen zum lustigen Plus- und Minusrechnen mit Waui</h1>\n            <Button variant=\"primary\" block\n                    onClick={() => {\n                        //toggle(0)();\n                        props.setVisible(false);\n                    }}>Lass uns loslegen!</Button>\n\n        </div>\n    );\n\n\n}\n\n\nexport default Splash;\n","/Users/dweber/Documents/Privat/haudenpanda/src/MultiPlayer.js",["88"],"import React, { useState, useEffect } from \"react\";\n\nexport const useMultiAudio = urls => {\n    const [sources] = useState(\n        urls.map(url => {\n            return {\n                url,\n                audio: new Audio(url)\n            };\n        })\n    );\n\n    const [players, setPlayers] = useState(\n        urls.map(url => {\n            return {\n                url,\n                playing: false\n            };\n        })\n    );\n\n    const toggle = targetIndex => () => {\n        const newPlayers = [...players];\n        const currentIndex = players.findIndex(p => p.playing === true);\n        if (currentIndex !== -1 && currentIndex !== targetIndex) {\n            newPlayers[currentIndex].playing = false;\n            newPlayers[targetIndex].playing = true;\n        } else if (currentIndex !== -1) {\n            newPlayers[targetIndex].playing = false;\n        } else {\n            newPlayers[targetIndex].playing = true;\n        }\n        setPlayers(newPlayers);\n    };\n\n    useEffect(() => {\n        sources.forEach((source, i) => {\n            players[i].playing ? source.audio.play() : source.audio.pause();\n        });\n    }, [sources, players]);\n\n    useEffect(() => {\n        sources.forEach((source, i) => {\n            source.audio.addEventListener(\"ended\", () => {\n                const newPlayers = [...players];\n                newPlayers[i].playing = false;\n                setPlayers(newPlayers);\n            });\n        });\n        return () => {\n            sources.forEach((source, i) => {\n                source.audio.removeEventListener(\"ended\", () => {\n                    const newPlayers = [...players];\n                    newPlayers[i].playing = false;\n                    setPlayers(newPlayers);\n                });\n            });\n        };\n    }, []);\n\n    return [players, toggle];\n};\n\nconst MultiPlayer = ({ urls }) => {\n    const [players, toggle] = useMultiAudio(urls);\n\n    return (\n        <div>\n            {players.map((player, i) => (\n                <Player key={i} player={player} toggle={toggle(i)} />\n            ))}\n        </div>\n    );\n};\n\nconst Player = ({ player, toggle }) => (\n    <div>\n        <p>Stream URL: {player.url}</p>\n        <button onClick={toggle}>{player.playing ? \"Pause\" : \"Play\"}</button>\n    </div>\n);\n\nexport default MultiPlayer;\n","/Users/dweber/Documents/Privat/haudenpanda/src/SolvedMessageBox.js",[],"/Users/dweber/Documents/Privat/haudenpanda/src/Status.js",["89","90"],"import React, {useEffect, useState} from 'react';\nfunction Status(props) {\n    const colors = [\"black\", \"lightgreen\", \"red\"];\n    return (\n        <div className=\"status\">\n            {props.excercises && props.excercises.map((value, index) => {\n                let color = colors[0];\n                /*if (props.results && props.results.length > index) {\n                    color = props.results[index] ? colors[1] : props.results[index] === undefined ? colors[0] : colors[2];\n                }*/\n                const ex = props.excercises[index];\n                if (ex.solved === undefined) {\n                    color = colors[0];\n                } else if (ex.solved === false) {\n                    color = colors[2];\n                }\n                else if (ex.solved === true) {\n                    color = colors[1];\n                }\n                return <i key={index} className=\"fa fa-circle\" aria-hidden=\"true\" style={{color: color, fontSize: \"30px\", marginLeft: \"5px\"}}></i>\n            })}\n        </div>\n    );\n\n\n}\n\n\nexport default Status;\n","/Users/dweber/Documents/Privat/haudenpanda/src/Reward.js",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"/Users/dweber/Documents/Privat/haudenpanda/src/Options.js",["106","107","108"],"import React, {useContext, useEffect, useState} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport {useLocalStorage} from \"./useLocalStorage\";\nimport Button from \"react-bootstrap/Button\";\n\n\nfunction Options(props) {\n    const [op, setMode] = useLocalStorage('mode', props.options[0]);\n    return (\n        <div className=\"Options\">\n            <Form>\n                {props.options && props.options.map((option, index) => (\n                    <div key={'radio' + index} className=\"mb-3\">\n                        <Form.Check\n                            type={'radio'}\n                            label={option.description}\n                            name={\"option\"}\n                            checked={option.min === op.min && option.max === op.max}\n                            onChange={() => {\n                                setMode(option)\n                            }}\n                        />\n\n                    </div>\n\n                ))}\n                <Button variant=\"danger\"\n                        className=\"Item\"\n                        onClick={() => {\n                            if (window.confirm('Wenn du fortfährst verlierst du alle Belohnungen!')) {\n                                window.localStorage.clear();\n                                window.location.reload(false);\n                            }\n                        }}>Alles zurücksetzen</Button>\n            </Form>\n        </div>\n    );\n\n\n}\n\n\nexport default Options;\n","/Users/dweber/Documents/Privat/haudenpanda/src/useLocalStorage.js",[],"/Users/dweber/Documents/Privat/haudenpanda/src/AnimalFamily.js",[],["109","110"],"/Users/dweber/Documents/Privat/haudenpanda/src/Attribution.js",["111","112","113"],"import React, {useContext, useEffect, useState} from 'react';\n\n\nfunction Attribution(props) {\n    return (\n        <div className=\"container-fluid\">\n            <h1>Attributions</h1>\n            <h2>Sounds</h2>\n            <ul>\n                <li><a href=\"https://freesound.org/people/themusicalnomad/sounds/253887/\">positive_beeps.wav</a> by <a href=\"https://freesound.org/people/themusicalnomad/\">themusicalnomad</a> License: Creative Commons</li>\n                <li><a href=\"https://freesound.org/people/Raclure/sounds/483598/\">Wrong</a> by <a href=\"https://freesound.org/people/Raclure/\">Raclure</a> License: Creative Commons</li>\n                <li><a href=\"https://freesound.org/people/erkanozan/sounds/51743/\">APPLAUSE.WAV</a> by <a href=\"https://freesound.org/people/erkanozan/\">erkanozan</a> License: Creative Commons</li>\n            </ul>\n            <h2>Images</h2>\n            <ul>\n                <li>All images are from <a href=\"https://freesvg.org/\">Source</a> by <a href=\"https://freesvg.org/by/OpenClipart\">OpenClipart</a> License: Public Domain</li>\n            </ul>\n        </div>\n    );\n}\n\n\nexport default Attribution;\n",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":2,"column":16,"nodeType":"120","messageId":"121","endLine":2,"endColumn":26},{"ruleId":"118","severity":1,"message":"122","line":7,"column":22,"nodeType":"120","messageId":"121","endLine":7,"endColumn":33},{"ruleId":"118","severity":1,"message":"123","line":12,"column":22,"nodeType":"120","messageId":"121","endLine":12,"endColumn":28},{"ruleId":"118","severity":1,"message":"124","line":19,"column":18,"nodeType":"120","messageId":"121","endLine":19,"endColumn":25},{"ruleId":"118","severity":1,"message":"125","line":21,"column":9,"nodeType":"120","messageId":"121","endLine":21,"endColumn":22},{"ruleId":"118","severity":1,"message":"126","line":47,"column":11,"nodeType":"120","messageId":"121","endLine":47,"endColumn":22},{"ruleId":"127","severity":1,"message":"128","line":79,"column":8,"nodeType":"129","endLine":79,"endColumn":29,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":237,"column":17,"nodeType":"120","messageId":"133","endLine":237,"endColumn":25},{"ruleId":"118","severity":1,"message":"134","line":1,"column":35,"nodeType":"120","messageId":"121","endLine":1,"endColumn":43},{"ruleId":"118","severity":1,"message":"135","line":1,"column":45,"nodeType":"120","messageId":"121","endLine":1,"endColumn":60},{"ruleId":"127","severity":1,"message":"136","line":8,"column":11,"nodeType":"137","endLine":23,"endColumn":6},{"ruleId":"138","severity":1,"message":"139","line":17,"column":41,"nodeType":"140","messageId":"141","endLine":17,"endColumn":42},{"ruleId":"118","severity":1,"message":"135","line":1,"column":9,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"134","line":1,"column":26,"nodeType":"120","messageId":"121","endLine":1,"endColumn":34},{"ruleId":"118","severity":1,"message":"134","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":35},{"ruleId":"118","severity":1,"message":"125","line":4,"column":9,"nodeType":"120","messageId":"121","endLine":4,"endColumn":22},{"ruleId":"127","severity":1,"message":"142","line":19,"column":8,"nodeType":"129","endLine":19,"endColumn":10,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":23,"column":12,"nodeType":"146","endLine":23,"endColumn":65},{"ruleId":"127","severity":1,"message":"147","line":59,"column":8,"nodeType":"129","endLine":59,"endColumn":10,"suggestions":"148"},{"ruleId":"118","severity":1,"message":"149","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"134","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":35},{"ruleId":"118","severity":1,"message":"149","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"150","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":33},{"ruleId":"118","severity":1,"message":"151","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":15},{"ruleId":"118","severity":1,"message":"152","line":11,"column":8,"nodeType":"120","messageId":"121","endLine":11,"endColumn":22},{"ruleId":"118","severity":1,"message":"153","line":12,"column":9,"nodeType":"120","messageId":"121","endLine":12,"endColumn":14},{"ruleId":"118","severity":1,"message":"154","line":12,"column":16,"nodeType":"120","messageId":"121","endLine":12,"endColumn":27},{"ruleId":"118","severity":1,"message":"155","line":18,"column":12,"nodeType":"120","messageId":"121","endLine":18,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":53,"column":21,"nodeType":"146","endLine":53,"endColumn":182},{"ruleId":"144","severity":1,"message":"145","line":54,"column":21,"nodeType":"146","endLine":54,"endColumn":116},{"ruleId":"144","severity":1,"message":"145","line":55,"column":21,"nodeType":"146","endLine":55,"endColumn":126},{"ruleId":"144","severity":1,"message":"145","line":56,"column":21,"nodeType":"146","endLine":56,"endColumn":120},{"ruleId":"144","severity":1,"message":"145","line":57,"column":21,"nodeType":"146","endLine":57,"endColumn":120},{"ruleId":"144","severity":1,"message":"145","line":58,"column":21,"nodeType":"146","endLine":58,"endColumn":120},{"ruleId":"144","severity":1,"message":"145","line":59,"column":21,"nodeType":"146","endLine":59,"endColumn":129},{"ruleId":"144","severity":1,"message":"145","line":60,"column":21,"nodeType":"146","endLine":60,"endColumn":117},{"ruleId":"118","severity":1,"message":"119","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"149","line":1,"column":28,"nodeType":"120","messageId":"121","endLine":1,"endColumn":37},{"ruleId":"118","severity":1,"message":"134","line":1,"column":39,"nodeType":"120","messageId":"121","endLine":1,"endColumn":47},{"ruleId":"114","replacedBy":"156"},{"ruleId":"116","replacedBy":"157"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"149","line":1,"column":28,"nodeType":"120","messageId":"121","endLine":1,"endColumn":37},{"ruleId":"118","severity":1,"message":"134","line":1,"column":39,"nodeType":"120","messageId":"121","endLine":1,"endColumn":47},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'Router' is defined but never used.","'options' is defined but never used.","'useMultiAudio' is defined but never used.","'handleClose' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'buildExcercises' and 'history.location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["160"],"no-redeclare","'unsolved' is already defined.","redeclared","'useState' is defined but never used.","'useLayoutEffect' is defined but never used.","The 'draw' function makes the dependencies of useEffect Hook (at line 42) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'draw' in its own useCallback() Hook.","VariableDeclarator","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'setSounds'. Either include it or remove the dependency array.",["161"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'players' and 'sources'. Either include them or remove the dependency array.",["162"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'lemming' is defined but never used.","'BackgroundItem' is defined but never used.","'Badge' is defined but never used.","'ProgressBar' is defined but never used.","'optionSelected' is assigned a value but never used.",["158"],["159"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [splashVisible, mode, history.location.pathname, buildExcercises]",{"range":"169","text":"170"},"Update the dependencies array to be: [setSounds]",{"range":"171","text":"172"},"Update the dependencies array to be: [players, sources]",{"range":"173","text":"174"},[2781,2802],"[splashVisible, mode, history.location.pathname, buildExcercises]",[680,682],"[setSounds]",[1787,1789],"[players, sources]"]